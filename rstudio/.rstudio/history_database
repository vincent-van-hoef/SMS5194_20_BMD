1607695505221:pwd
1607695508329:getwd()
1607695519393:setwd("/home/")
1607695527083:list.files()
1607695561038:setwd("/home/scripts")
1607695594226:library("kableExtra")
1607695594549:library("knitr")
1607695594612:library("openxlsx")
1607695594815:library("ggplot2")
1607695595115:library("PCAtools")
1607695598878:library("pcaExplorer")
1607695606339:library("factoextra")
1607695607267:library("FactoMineR")
1607695608162:library("cowplot")
1607695609210:library("plsmod")
1607695614896:library("WebGestaltR")
1607695620268:library("ggpubr")
1607695621364:library("limma")
1607695622907:library("openxlsx")
1607695625292:db_file <- "../data/external/Human_GO_bp_no_GO_iea_symbol.gmt"
1607695783148:install.packages("devtools")
1607695808323:devtools::install_github("IRkernel/IRkernel")
1607695847706:IRkernel::installspec()
1607696210113:devtools::install_github("IRkernel/IRkernel"); IRkernel::installspec()
1607699610999:library("kableExtra")
1607700217548:library("kableExtra")
1607700217901:library("knitr")
1607700217965:library("openxlsx")
1607700218106:library("ggplot2")
1607700218374:library("PCAtools")
1607700221063:library("factoextra")
1607700221098:library("FactoMineR")
1607700221165:library("cowplot")
1607700221195:library("ggpubr")
1607700221794:library("limma")
1607700221984:library("openxlsx")
1607700222002:db_file <- "../data/external/Human_GO_bp_no_GO_iea_symbol.gmt"
1607700886259:getwd()
1607700901922:setwd("/home/scripts/")
1607700954587:# Load and clean data...
1607700954600:MQ <- readRDS("../data/external/MQ.RData")
1607700963016:MNQC <- readRDS("../data/external/MNQC.RData")
1607700968259:annotation <- readRDS("../data/external/annotation.RDS")
1607701019212:ann <- annotation[match(rownames(MNQC), annotation$Name),c(1:4, 12:19, 22:ncol(annotation))]
1607701025585:QCT <- read.csv("../data/external/SuperG_pQCT_PE.csv", sep = ";", dec=".", strip.white = TRUE)
1607701029234:phenoData <- readRDS("../data/external/phenoData.RData")
1607701032892:pheno	<- phenoData %>%
1607701032905:as.data.frame() %>%
1607701032913:select(-c(Basename, filenames, xMed, yMed, predictedSex)) %>%
1607701032926:mutate(Fx = ifelse(Fx == 0, "noFx", "Fx")) %>%
1607701032936:mutate(Batch = ifelse(Batch == 1, "Batch1", "Batch2")) %>%
1607701032946:mutate(slide_array = paste(Slide, Array, sep="_")) %>%
1607701032956:mutate(group = paste(BMD, Fx, sep="_")) %>%
1607701032966:mutate(sample_name = gsub("blood.*", "", sample_name)) %>%
1607701032977:mutate(sample_names= paste0("MKB", sample_name)) %>%
1607701032987:left_join(select(QCT,
1607701032996:id,
1607701033007:TRAB_A_RAD_4,
1607701033016:TRAB_DEN_RAD_4,
1607701033026:TOT_A_RAD_4,
1607701033035:TOT_DEN_RAD_4,
1607701033047:CRT_A_RAD_4,
1607701033056:CRT_DEN_RAD_4,
1607701033066:CRT_THK_C_RAD_4), by = c("sample_names" = "id")) %>%
1607701033074:select(-c(Slide, Array)) %>%
1607701033084:mutate_at(.vars = vars("Chip.number", "Batch", "BMD", "Fx", "group"), factor) %>%
1607701033093:column_to_rownames(var = "sample_name")
1607701058935:library("dplyr")
1607701063945:pheno	<- phenoData %>%
1607701063953:as.data.frame() %>%
1607701063963:select(-c(Basename, filenames, xMed, yMed, predictedSex)) %>%
1607701063974:mutate(Fx = ifelse(Fx == 0, "noFx", "Fx")) %>%
1607701063984:mutate(Batch = ifelse(Batch == 1, "Batch1", "Batch2")) %>%
1607701063992:mutate(slide_array = paste(Slide, Array, sep="_")) %>%
1607701064005:mutate(group = paste(BMD, Fx, sep="_")) %>%
1607701064015:mutate(sample_name = gsub("blood.*", "", sample_name)) %>%
1607701064026:mutate(sample_names= paste0("MKB", sample_name)) %>%
1607701064034:left_join(select(QCT,
1607701064044:id,
1607701064055:TRAB_A_RAD_4,
1607701064063:TRAB_DEN_RAD_4,
1607701064075:TOT_A_RAD_4,
1607701064085:TOT_DEN_RAD_4,
1607701064093:CRT_A_RAD_4,
1607701064103:CRT_DEN_RAD_4,
1607701064114:CRT_THK_C_RAD_4), by = c("sample_names" = "id")) %>%
1607701064123:select(-c(Slide, Array)) %>%
1607701064133:mutate_at(.vars = vars("Chip.number", "Batch", "BMD", "Fx", "group"), factor) %>%
1607701064144:column_to_rownames(var = "sample_name")
1607701090168:pheno	<- phenoData %>%
1607701090180:as.data.frame() %>%
1607701090188:select(-c(Basename, filenames, xMed, yMed, predictedSex)) %>%
1607701090199:mutate(Fx = ifelse(Fx == 0, "noFx", "Fx")) %>%
1607701090210:mutate(Batch = ifelse(Batch == 1, "Batch1", "Batch2")) %>%
1607701090218:mutate(slide_array = paste(Slide, Array, sep="_")) %>%
1607701090229:mutate(group = paste(BMD, Fx, sep="_")) %>%
1607701090239:mutate(sample_name = gsub("blood.*", "", sample_name)) %>%
1607701090248:mutate(sample_names= paste0("MKB", sample_name)) %>%
1607701090258:left_join(select(QCT,
1607701090269:id,
1607701090277:TRAB_A_RAD_4,
1607701090287:TRAB_DEN_RAD_4,
1607701090298:TOT_A_RAD_4,
1607701090306:TOT_DEN_RAD_4,
1607701090317:CRT_A_RAD_4,
1607701090327:CRT_DEN_RAD_4,
1607701090334:CRT_THK_C_RAD_4), by = c("sample_names" = "id")) %>%
1607701090344:select(-c(Slide, Array)) %>%
1607701090355:mutate_at(.vars = vars("Chip.number", "Batch", "BMD", "Fx", "group"), factor) %>%
1607701090362:tibble::column_to_rownames(var = "sample_name")
1607701091954:colnames(MQ)	<- rownames(pheno[match(colnames(MQ), pheno$slide_array),])
1607701093529:colnames(MNQ)	<- rownames(pheno[match(colnames(MNQ), pheno$slide_array),])
1607701102777:MNQ <- readRDS("../data/external/MNQ.RData")
1607701113649:# Load and clean data...
1607701113726:MQ <- readRDS("../data/external/MQ.RData")
1607701125023:MNQ <- readRDS("../data/external/MNQ.RData")
1607701136016:MNQC <- readRDS("../data/external/MNQC.RData")
1607701161253:annotation <- readRDS("../data/external/annotation.RDS")
1607701190171:ann <- annotation[match(rownames(MNQC), annotation$Name),c(1:4, 12:19, 22:ncol(annotation))]
1607701204620:QCT <- read.csv("../data/external/SuperG_pQCT_PE.csv", sep = ";", dec=".", strip.white = TRUE)
1607701204967:phenoData <- readRDS("../data/external/phenoData.RData")
1607701205064:pheno	<- phenoData %>%
1607701205080:as.data.frame() %>%
1607701205097:select(-c(Basename, filenames, xMed, yMed, predictedSex)) %>%
1607701205113:mutate(Fx = ifelse(Fx == 0, "noFx", "Fx")) %>%
1607701205129:mutate(Batch = ifelse(Batch == 1, "Batch1", "Batch2")) %>%
1607701205144:mutate(slide_array = paste(Slide, Array, sep="_")) %>%
1607701205162:mutate(group = paste(BMD, Fx, sep="_")) %>%
1607701205181:mutate(sample_name = gsub("blood.*", "", sample_name)) %>%
1607701205202:mutate(sample_names= paste0("MKB", sample_name)) %>%
1607701205220:left_join(select(QCT,
1607701205243:id,
1607701205260:TRAB_A_RAD_4,
1607701205281:TRAB_DEN_RAD_4,
1607701205298:TOT_A_RAD_4,
1607701205324:TOT_DEN_RAD_4,
1607701205350:CRT_A_RAD_4,
1607701205368:CRT_DEN_RAD_4,
1607701205388:CRT_THK_C_RAD_4), by = c("sample_names" = "id")) %>%
1607701205406:select(-c(Slide, Array)) %>%
1607701205424:mutate_at(.vars = vars("Chip.number", "Batch", "BMD", "Fx", "group"), factor) %>%
1607701205443:tibble::column_to_rownames(var = "sample_name")
1607701205860:colnames(MQ)	<- rownames(pheno[match(colnames(MQ), pheno$slide_array),])
1607701205898:colnames(MNQ)	<- rownames(pheno[match(colnames(MNQ), pheno$slide_array),])
1607701555452:m_all <- MNQ[order(rowVars(MNQ), decreasing = TRUE), ][,]
1607701593190:library(matrixStats)
1607701601264:m_all <- MNQ[order(rowVars(MNQ), decreasing = TRUE), ][,]
1607701622523:m_all <- m_all[,rownames(pheno)]
1607701623016:p_all <- prcomp(t(m_all), scale. = FALSE)
1607701634142:fviz_pca_ind(p_all,
1607701634196:axes = c(1,2),
1607701634286:geom.ind = c("point", "text"),
1607701634299:pointshape = 21,
1607701634312:fill.ind = pheno$group,
1607701634325:palette = "jco",
1607701634338:label = "",
1607701634351:title = "All probes")
1607701651187:corr_all <- correlatePCs(p_all, coldata=pheno[, c("group", "Fx", "BMD", "Batch", "TRAB_A_RAD_4", "TRAB_DEN_RAD_4", "TOT_A_RAD_4", "TOT_DEN_RAD_4", "CRT_A_RAD_4", "CRT_DEN_RAD_4", "CRT_THK_C_RAD_4")], pcs = 1:10)
1607701683868:library("pcaExplorer")
1607701701724:install("pcaExplorer")
1607701709825:BioCmanager::install("pcaExplorer")
1607701720927:BiocManager::install("pcaExplorer")
1607702114700:library("pcaExplorer")
1607702131432:corr_all <- correlatePCs(p_all, coldata=pheno[, c("group", "Fx", "BMD", "Batch", "TRAB_A_RAD_4", "TRAB_DEN_RAD_4", "TOT_A_RAD_4", "TOT_DEN_RAD_4", "CRT_A_RAD_4", "CRT_DEN_RAD_4", "CRT_THK_C_RAD_4")], pcs = 1:10)
1607702132435:corr_all %>%
1607702132448:as.data.frame(corr_all, row.names = rownames(corr_all)) %>%
1607702132461:rownames_to_column() %>%
1607702132474:mutate(rowname = gsub("_", "-", rowname)) %>%
1607702132488:rename_all(function(x) gsub("_", " ", x)) %>%
1607702132501:mutate_if(is.numeric, ~ round(., 4)) %>%
1607702132514:mutate_if(is.numeric, ~cell_spec(., color = ifelse(. < 0.05, "red", "black"))) %>%
1607702132526:column_to_rownames() %>%
1607702132540:kable(escape = FALSE, row.names = TRUE, caption = "P values of correlation test of metadata with PCs. Kruskal-Willis test for categorical data and Spearman correlation for continuous data. PCA calculated using all probes.") %>%
1607702132554:kable_styling(full_width = FALSE, latex_options = c("scale_down", "hold_position"))
1607702141317:corr_all <- correlatePCs(p_all, coldata=pheno[, c("group", "Fx", "BMD", "Batch", "TRAB_A_RAD_4", "TRAB_DEN_RAD_4", "TOT_A_RAD_4", "TOT_DEN_RAD_4", "CRT_A_RAD_4", "CRT_DEN_RAD_4", "CRT_THK_C_RAD_4")], pcs = 1:10)
1607702141566:corr_all %>%
1607702141579:as.data.frame(corr_all, row.names = rownames(corr_all)) %>%
1607702141593:rownames_to_column() %>%
1607702141607:mutate(rowname = gsub("_", "-", rowname)) %>%
1607702141621:rename_all(function(x) gsub("_", " ", x)) %>%
1607702141634:mutate_if(is.numeric, ~ round(., 4)) %>%
1607702141647:mutate_if(is.numeric, ~cell_spec(., color = ifelse(. < 0.05, "red", "black"))) %>%
1607702141667:tibble::column_to_rownames() %>%
1607702141681:kable(escape = FALSE, row.names = TRUE, caption = "P values of correlation test of metadata with PCs. Kruskal-Willis test for categorical data and Spearman correlation for continuous data. PCA calculated using all probes.") %>%
1607702141695:kable_styling(full_width = FALSE, latex_options = c("scale_down", "hold_position"))
1607702152749:corr_all <- correlatePCs(p_all, coldata=pheno[, c("group", "Fx", "BMD", "Batch", "TRAB_A_RAD_4", "TRAB_DEN_RAD_4", "TOT_A_RAD_4", "TOT_DEN_RAD_4", "CRT_A_RAD_4", "CRT_DEN_RAD_4", "CRT_THK_C_RAD_4")], pcs = 1:10)
1607702153068:corr_all %>%
1607702153086:as.data.frame(corr_all, row.names = rownames(corr_all)) %>%
1607702153102:tibble::rownames_to_column() %>%
1607702153118:mutate(rowname = gsub("_", "-", rowname)) %>%
1607702153134:rename_all(function(x) gsub("_", " ", x)) %>%
1607702153154:mutate_if(is.numeric, ~ round(., 4)) %>%
1607702153186:mutate_if(is.numeric, ~cell_spec(., color = ifelse(. < 0.05, "red", "black"))) %>%
1607702153207:tibble::column_to_rownames() %>%
1607702153226:kable(escape = FALSE, row.names = TRUE, caption = "P values of correlation test of metadata with PCs. Kruskal-Willis test for categorical data and Spearman correlation for continuous data. PCA calculated using all probes.") %>%
1607702153244:kable_styling(full_width = FALSE, latex_options = c("scale_down", "hold_position"))
1607702162476:fviz_pca_ind(p_all,
1607702162496:axes = c(4,5),
1607702162513:geom.ind = c("point", "text"),
1607702162529:pointshape = 21,
1607702162545:fill.ind = pheno$Batch,
1607702162566:palette = "jco",
1607702162586:label = "",
1607702162605:title = "All probes")
1607702220986:m_var	<- m_all[1:10000,]
1607702221234:p_var <- prcomp(t(m_var), scale. = FALSE)
1607702221438:fviz_pca_ind(p_var,
1607702221466:axes = c(1,2),
1607702221489:geom.ind = c("point", "text"),
1607702221504:pointshape = 21,
1607702221517:fill.ind = pheno$group,
1607702221531:palette = "jco",
1607702221546:label = "",
1607702221562:title = "10 000 most variable probes")
1607702238567:corr_var <- correlatePCs(p_var, coldata=pheno[, c("group", "Fx", "BMD", "Batch", "TRAB_A_RAD_4", "TRAB_DEN_RAD_4", "TOT_A_RAD_4", "TOT_DEN_RAD_4", "CRT_A_RAD_4", "CRT_DEN_RAD_4", "CRT_THK_C_RAD_4")], pcs = 1:10)
1607702239022:corr_var %>%
1607702239046:as.data.frame(corr_var, row.names = rownames(corr_var)) %>%
1607702239068:tibble::rownames_to_column() %>%
1607702239086:mutate(rowname = gsub("_", "-", rowname)) %>%
1607702239104:rename_all(function(x) gsub("_", " ", x)) %>%
1607702239122:mutate_if(is.numeric, ~ round(., 4)) %>%
1607702239141:mutate_if(is.numeric, ~cell_spec(., color = ifelse(. < 0.05, "red", "black"))) %>%
1607702239159:tibble::column_to_rownames() %>%
1607702239177:kable(escape = FALSE, row.names = TRUE, caption = "P values of correlation test of metadata with PCs. Kruskal-Willis test for categorical data and Spearman correlation for continuous data. PCA calculated using the 10 000 most variable probes.") %>%
1607702239195:kable_styling(full_width = FALSE, latex_options = c("scale_down", "hold_position"))
1607702244917:fviz_pca_ind(p_var,
1607702244938:axes = c(2,3),
1607702244955:geom.ind = c("point", "text"),
1607702244974:pointshape = 21,
1607702244991:fill.ind = pheno$Batch,
1607702245009:palette = "jco",
1607702245027:label = "",
1607702245044:title = "10 000 most variable probes")
1607702256905:mains	<- c("BMD", "Fx")
1607702256929:for(main in mains){
1607702256943:mod <- model.matrix(as.formula(paste0("~ 0 + ", main, " + Batch + CD8T + CD4T + NK + Bcell + Mono + Neu")), data = pheno)
1607702256955:fit <- lmFit(MNQ, mod)
1607702256968:if(main == "Fx"){
1607702256981:contMatrix <- makeContrasts(contrasts = "FxFx-FxnoFx", levels = mod)
1607702256994:} else {
1607702257008:contMatrix <- makeContrasts(contrasts = "BMDHigh-BMDLow", levels = mod)
1607702257021:}
1607702257034:fit_contrast	<- contrasts.fit(fit, contMatrix)
1607702257048:fit_res	<- eBayes(fit_contrast)
1607702257073:write.xlsx(topTable(fit_res, n=Inf), paste0("Results/Probes/", main, ".xlsx"), row.names=TRUE)
1607702257093:myRank 	<- rankProbes(MNQ,
1607702257106:pheno,
1607702257119:explanatory = main,
1607702257131:covariates = c("Batch", "CD8T", "CD4T", "NK", "Bcell", "Mono", "Neu"),
1607702257145:continuous = c("CD8T", "CD4T", "NK", "Bcell", "Mono", "Neu"),
1607702257158:typeInput = "M")
1607702257170:myTest	<-  mCSEATest(myRank,
1607702257183:MNQ,
1607702257197:pheno = pheno,
1607702257210:column = main,
1607702257224:regionsTypes = c("promoters", "genes", "CGI"),
1607702257237:platform = "EPIC")
1607702257260:write.xlsx(myTest[c("genes", "promoters", "CGI")], paste0("Results/Regions/mCSEA_", main, ".xlsx"), row.names = TRUE)
1607702257272:}
1607702323060:library(mCSEA)
1607702332092:mains	<- c("BMD", "Fx")
1607702332125:for(main in mains){
1607702332143:mod <- model.matrix(as.formula(paste0("~ 0 + ", main, " + Batch + CD8T + CD4T + NK + Bcell + Mono + Neu")), data = pheno)
1607702332160:fit <- lmFit(MNQ, mod)
1607702332178:if(main == "Fx"){
1607702332195:contMatrix <- makeContrasts(contrasts = "FxFx-FxnoFx", levels = mod)
1607702332212:} else {
1607702332231:contMatrix <- makeContrasts(contrasts = "BMDHigh-BMDLow", levels = mod)
1607702332252:}
1607702332290:fit_contrast	<- contrasts.fit(fit, contMatrix)
1607702332309:fit_res	<- eBayes(fit_contrast)
1607702332342:write.xlsx(topTable(fit_res, n=Inf), paste0("Results/Probes/", main, ".xlsx"), row.names=TRUE)
1607702332374:myRank 	<- rankProbes(MNQ,
1607702332395:pheno,
1607702332414:explanatory = main,
1607702332432:covariates = c("Batch", "CD8T", "CD4T", "NK", "Bcell", "Mono", "Neu"),
1607702332450:continuous = c("CD8T", "CD4T", "NK", "Bcell", "Mono", "Neu"),
1607702332468:typeInput = "M")
1607702332489:myTest	<-  mCSEATest(myRank,
1607702332509:MNQ,
1607702332546:pheno = pheno,
1607702332564:column = main,
1607702332581:regionsTypes = c("promoters", "genes", "CGI"),
1607702332599:platform = "EPIC")
1607702332634:write.xlsx(myTest[c("genes", "promoters", "CGI")], paste0("Results/Regions/mCSEA_", main, ".xlsx"), row.names = TRUE)
1607702332651:}
